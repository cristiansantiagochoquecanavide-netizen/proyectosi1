# Archivo de ejemplo de variables de entorno
# Copia este archivo como .env y completa con tus valores reales

# =============================================================================
# DJANGO CORE
# =============================================================================
# Genera una clave secreta única: python -c "from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())"
DJANGO_SECRET_KEY=tu-clave-secreta-muy-larga-y-aleatoria-aqui

# En desarrollo: True, en producción: False
DJANGO_DEBUG=True

# Hosts permitidos (separados por comas)
# En producción: tu-app.onrender.com,www.tu-app.onrender.com
DJANGO_ALLOWED_HOSTS=127.0.0.1,localhost

# =============================================================================
# BASE DE DATOS POSTGRESQL
# =============================================================================
DB_ENGINE=django.db.backends.postgresql
DB_NAME=proyectosi1_db
DB_USER=proyectosi1_db_user
DB_PASSWORD=tu-password-de-base-de-datos
DB_HOST=dpg-xxxxx.oregon-postgres.render.com
DB_PORT=5432
DB_SSLMODE=require

# =============================================================================
# CORS Y CSRF (Configuración de orígenes permitidos)
# =============================================================================
# En desarrollo: http://localhost:5173
# En producción: https://tu-frontend.onrender.com
CSRF_TRUSTED_ORIGINS=http://localhost:5173,http://127.0.0.1:5173

# URLs del frontend permitidas para CORS (separadas por comas)
CORS_ALLOWED_ORIGINS=http://localhost:5173,http://127.0.0.1:5173

# =============================================================================
# PERMISOS Y AUTORIZACION
# =============================================================================
# Desactivar temporalmente los permisos por rol (1=desactivado, 0=activado)
# En producción debe estar en 0
DISABLE_ROLE_PERMS=1

# =============================================================================
# NOTAS PARA DESPLIEGUE EN RENDER
# =============================================================================
# 1. Crea un nuevo Web Service en Render
# 2. Conecta tu repositorio de GitHub
# 3. Configura:
#    - Build Command: ./build.sh
#    - Start Command: gunicorn backend.wsgi:application
#    - Environment: Python 3
# 4. Añade todas estas variables de entorno en el panel de Render
# 5. Crea una base de datos PostgreSQL en Render y usa sus credenciales aquí
